name: Build & Deploy D4D (Fullstack)

on:
  pull_request:
    types: [closed]
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    # Läuft bei manuellem Start ODER bei gemergtem PR
    if: github.event_name == 'workflow_dispatch' || (github.event.pull_request.merged == true)
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Build Backend (Maven)
        working-directory: backend_v2
        run: mvn -B clean package -DskipTests

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend_v2
          file: ./backend_v2/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/d4d-backend:latest

      - name: Build & Push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend_v2
          file: ./frontend_v2/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/d4d-frontend:latest

      - name: Deploy to VM10
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            cd ~/d4d
            git fetch --all
            git reset --hard origin/main
            docker compose pull
            docker compose down
            docker compose up -d
            echo "✅ Deployment completed successfully!"
